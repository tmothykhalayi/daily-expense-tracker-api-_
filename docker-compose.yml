services:
  daily-management-db:
    image: postgres:15-alpine
    container_name: expense-tracker-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: B3YOND
      POSTGRES_DB: expensetracker
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes: 
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8.0-alpine
    container_name: redis-cache
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-your_secure_redis_password}
    command: >
      sh -c "redis-server --requirepass ${REDIS_PASSWORD:-your_secure_redis_password}"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: [
        "CMD", 
        "sh", 
        "-c", 
        "redis-cli -a ${REDIS_PASSWORD:-your_secure_redis_password} ping"
      ]
      interval: 30s
      timeout: 10s
      retries: 3

  nestjs_app:
    build:
      context: .
      dockerfile: Dockerfile
      tags:
        - "expense-tracker-api:latest"
    image: expense-tracker-api:latest
    container_name: nestjs_app
    ports:
      - "8000:8000"
    environment:
      NODE_ENV: development
      PORT: 8000
      DB_HOST: daily-management-db
      DB_PORT: 5432
      DB_NAME: daily-expense-tracker-system-db
      DB_USERNAME: postgres
      DB_PASSWORD: B3YOND
      DB_SYNC: true
      DB_LOGGING: true
      REDIS_URL: redis://:${REDIS_PASSWORD:-your_secure_redis_password}@redis:6379
      JWT_ACCESS_TOKEN_SECRET: ${JWT_ACCESS_TOKEN_SECRET:-your_access_token_secret}
      JWT_ACCESS_TOKEN_EXPIRATION_TIME: ${JWT_ACCESS_TOKEN_EXPIRATION_TIME:-15m}
      JWT_REFRESH_TOKEN_SECRET: ${JWT_REFRESH_TOKEN_SECRET:-your_refresh_token_secret}
      JWT_REFRESH_TOKEN_EXPIRATION_TIME: ${JWT_REFRESH_TOKEN_EXPIRATION_TIME:-7d}
      THROTTLE_TTL: ${THROTTLE_TTL:-6000}
      THROTTLE_LIMIT: ${THROTTLE_LIMIT:-100}
    depends_on:
      redis:
        condition: service_healthy
      daily-management-db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules

volumes:
  pgdata:
    name: expense-tracker-system-pgdata
    driver: local
  redis-data:
    name: expense-tracker-system-redis-data
    driver: local

networks:
  app-network:
    driver: bridge
